from rest_framework import serializers

class WeatherSerializer(serializers.Serializer):
    id_district = serializers.CharField(max_length=100)
    name_precipitation = serializers.CharField(max_length=100)
    icon_precipitation = serializers.CharField(max_length=100)
    name_cloud = serializers.CharField(max_length=100)
    icon_cloud = serializers.CharField(max_length=100)

    def create(self, validated_data):
        return Day.objects.create(**validated_data)

    def update(self, instance, validated_data):
        instance.id_district = validated_data.get('id_district', instance.id_district)
        instance.name_precipitation = validated_data.get('name_precipitation', instance.name_precipitation)
        instance.icon_precipitation = validated_data.get('icon_precipitation', instance.icon_precipitation)
        instance.name_cloud = validated_data.get('name_cloud', instance.name_cloud)
        instance.icon_cloud = validated_data.get('icon_cloud', instance.icon_cloud)
        instance.save()
        return instance


#  id_district = models.ForeignKey(District, on_delete = models.CASCADE)
#     date = models.DateField('день')
#     id_temperature = models.ForeignKey(Temperature, on_delete = models.CASCADE)
#     average_temperature = models.IntegerField('среднее значение температуры')
#     id_humidity = models.ForeignKey(Humidity, on_delete = models.CASCADE)
#     average_humidity = models.IntegerField('среднее значение влажности')
#     id_precipitation = models.ForeignKey(Precipitation, on_delete = models.CASCADE)
#     average_precipitation = models.IntegerField('среднее значение осадков')
#     name_precipitation = models.CharField('средний тип осадков', max_length=100) 
#     icon_precipitation = models.CharField('путь к иконке по типу осадков', max_length=100)  
#     id_cloud = models.ForeignKey(Cloud, on_delete = models.CASCADE)
#     average_cloud = models.IntegerField('среднее значение облачности')
#     name_cloud = models.CharField('средний тип облачности', max_length=100) 
#     icon_cloud = models.CharField('путь к иконке по типу облачности', max_length=100)  
#     id_pressure = models.ForeignKey(Pressure, on_delete = models.CASCADE)
#     average_pressure = models.IntegerField('среднее значение давления')
#     id_wind = models.ForeignKey(Wind, on_delete = models.CASCADE)
#     average_wind = models.IntegerField('среднее значение ветренности') = models.ForeignKey(District, on_delete = models.CASCADE)
#     date = models.DateField('день')
#     id_temperature = models.ForeignKey(Temperature, on_delete = models.CASCADE)
#     average_temperature = models.IntegerField('среднее значение температуры')
#     id_humidity = models.ForeignKey(Humidity, on_delete = models.CASCADE)
#     average_humidity = models.IntegerField('среднее значение влажности')
#     id_precipitation = models.ForeignKey(Precipitation, on_delete = models.CASCADE)
#     average_precipitation = models.IntegerField('среднее значение осадков')
#     name_precipitation = models.CharField('средний тип осадков', max_length=100) 
#     icon_precipitation = models.CharField('путь к иконке по типу осадков', max_length=100)  
#     id_cloud = models.ForeignKey(Cloud, on_delete = models.CASCADE)
#     average_cloud = models.IntegerField('среднее значение облачности')
#     name_cloud = models.CharField('средний тип облачности', max_length=100) 
#     icon_cloud = models.CharField('путь к иконке по типу облачности', max_length=100)  
#     id_pressure = models.ForeignKey(Pressure, on_delete = models.CASCADE)
#     average_pressure = models.IntegerField('среднее значение давления')
#     id_wind = models.ForeignKey(Wind, on_delete = models.CASCADE)
#     average_wind = models.IntegerField('среднее значение ветренности')